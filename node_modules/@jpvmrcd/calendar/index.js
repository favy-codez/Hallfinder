var Calendar = /** @class */ (function () {
    function Calendar(el) {
        this.options = {
            dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
        };
        this.element = el;
    }
    Calendar.prototype.render = function (year, month) {
        var _this = this;
        if (this.element == null) {
            throw new Error('element is null');
        }
        var table = document.createElement('table');
        var tableHead = document.createElement('thead');
        table.appendChild(tableHead);
        var thr = document.createElement('tr');
        tableHead.appendChild(thr);
        var _a = this.options, dayNames = _a.dayNames, startDay = _a.startDay, onCellAdded = _a.onCellAdded, onDateClicked = _a.onDateClicked;
        var startDayIndex = 0;
        if (startDay) {
            startDayIndex = dayNames.indexOf(startDay);
            if (startDayIndex === -1) {
                throw new RangeError("startDay [".concat(startDay, "] must be one of options.dayNames's values [").concat(dayNames, "]."));
            }
        }
        var date = new Date();
        date.setHours(0, 0, 0, 0);
        var currentTime = date.getTime();
        if (year == null || month == null) {
            date.setDate(1);
        }
        else {
            date = new Date(year, month, 1);
        }
        this.year = date.getFullYear();
        this.month = date.getMonth();
        var firstDay = date.getDay();
        var firstDayOfMonth;
        var dayNamesWithDayNumber = dayNames
            .map(function (day, index) { return ({ day: day, index: index }); });
        for (var i = 0; i < startDayIndex; i++) {
            dayNamesWithDayNumber.push(dayNamesWithDayNumber.shift());
        }
        for (var i = 0; i < dayNamesWithDayNumber.length; i++) {
            var th = document.createElement('th');
            var d = dayNamesWithDayNumber[i];
            th.appendChild(document.createTextNode(d.day));
            thr.appendChild(th);
            if (firstDay === d.index) {
                firstDayOfMonth = i;
            }
        }
        var tableBody = document.createElement('tbody');
        // remove `closest` when ie11 support stops
        var closest = function (elem, s) {
            if (!Element.prototype.matches) {
                Element.prototype.matches = Element.prototype.msMatchesSelector
                    || Element.prototype.webkitMatchesSelector;
            }
            var el = elem;
            do {
                if (Element.prototype.matches.call(el, s))
                    return el;
                el = el.parentElement || el.parentNode;
            } while (el !== null && el.nodeType === 1);
            return null;
        };
        if (onDateClicked && typeof onDateClicked === 'function') {
            var clickd = function (e) {
                var el = !Element.prototype.closest
                    ? closest(e.target, '[data-date]')
                    : e.target.closest('[data-date]');
                if (el) {
                    onDateClicked({ event: e, dateISOString: el.dataset.date });
                }
            };
            tableBody.addEventListener('click', clickd);
        }
        var lastDateOfMonth = new Date(this.year, this.month + 1, 0).getDate();
        var shouldContinue = false;
        var shouldPrintNextDay = false;
        var day = date.getDate();
        var padLeft = function (num) { return (num > 9 ? '' : '0') + num.toString(); };
        var appendCell = function (td, cellDate) {
            var dayOfMonth = cellDate.getDate();
            var isoDate = "".concat(_this.year, "-").concat(padLeft(_this.month + 1), "-").concat(padLeft(dayOfMonth));
            td.dataset.date = isoDate;
            if (currentTime === cellDate.getTime()) {
                td.classList.add('today');
            }
            if (onCellAdded && typeof onCellAdded === 'function') {
                onCellAdded({ td: td, dateISOString: isoDate });
            }
            else {
                td.appendChild(document.createTextNode(dayOfMonth.toString()));
            }
        };
        do {
            var tr = document.createElement('tr');
            for (var i = 0; i < 7; i++) {
                var td = document.createElement('td');
                if (shouldPrintNextDay) {
                    day += 1;
                    date.setDate(day);
                    appendCell(td, date);
                }
                else if (firstDayOfMonth === i && day === 1) {
                    shouldPrintNextDay = true;
                    appendCell(td, date);
                }
                if (lastDateOfMonth === day) {
                    shouldPrintNextDay = false;
                }
                tr.appendChild(td);
            }
            shouldContinue = lastDateOfMonth !== day;
            tableBody.appendChild(tr);
        } while (shouldContinue);
        while (this.element.firstChild) {
            this.element.removeChild(this.element.firstChild);
        }
        table.appendChild(tableBody);
        this.element.appendChild(table);
    };
    return Calendar;
}());
export { Calendar };
